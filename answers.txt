1. Как организовать клиент-серверное взаимодействие?
   Взаимодействие организуется IP-адреса и порта - нумерованного сокета на отдельной машине.
   В Java поддерживаются две разновидности сокетов по протоколу ТСР/IP: один — для серверов, другой — для клиентов.
   Класс ServerSocket предназначен для создания сервера, который будет обрабатывать клиентские подключения,
   тогда как класс Socket предназначен для обмена данными между сервером и клиентами по сетевому протоколу.
   При создании объекта типа Socket неявно устанавливается соединение клиента с сервером.
   Для доступа к потокам ввода-вывода, связанным с классом Socket,
   можно воспользоваться методами getInputStream() и getOutputStream()
2. Как и в каком виде передавать файлы?
   Файлы передаются в виде байтов.
3. Как пересылать большие файлы?
   Для ускорения передачи больших файлов желательно либо использовать буферизацию,
   либо кусками (массивами) по десятку-сотне-тысяче байт.
4. Как пересылать служебные команды?
   Пересылать служебные команды можно либо с помощью создания подклассов от абстрактного класса (в случае сериализации),
   либо с помощью протоколов, записи "флага" и команды, в поток передаваемых байтов.
5. Что хранить в базе данных?
   Данные о пользователях.
6. Как передавать структуру каталогов/файлов?
   Возможно с помощью класса с полем ArrayList<String>(), либо в строке с определёнными разделителями.